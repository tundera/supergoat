### This file was generated by Nexus Schema
### Do not make changes to this file directly

"""
NBA coach
"""
type Coach {
  createdAt: DateTime!
  handle: String!
  id: ID!
  isAssistant: String
  name: String!
  team: Team
  teamId: String
  type: String
  updatedAt: DateTime!
}

input CoachOrderByInput {
  name: SortOrder!
}

input CoachWhereInput {
  id: String!
  name: StringFilter!
}

input CoachWhereUniqueInput {
  id: String!
}

"""
Team color scheme
"""
type ColorScheme {
  createdAt: DateTime!
  id: ID!
  primary: String!
  secondary: String!
  team: Team
  teamId: String
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input IntFilter {
  contains: Int!
  endsWith: Int!
  equals: Int!
  gt: Int!
  gte: Int!
  in: [Int!]!
  lt: Int!
  lte: Int!
  notIn: [Int!]!
  startsWith: Int!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

"""
NBA player
"""
type Player {
  createdAt: DateTime!
  handle: String!
  height: String!
  id: ID!
  name: String!
  number: String
  position: String
  slug: String!
  team: Team
  teamId: String
  updatedAt: DateTime!
  weight: String!
}

input PlayerOrderByInput {
  name: SortOrder!
}

input PlayerWhereInput {
  id: String!
  name: StringFilter!
}

input PlayerWhereUniqueInput {
  id: String!
}

type Query {
  coaches: [Coach]
  coachesByTeam(id: String): [Coach]
  colorSchemeByTeam(id: String): ColorScheme
  colorSchemes: [ColorScheme]
  players: [Player]
  playersByTeam(id: String): [Player]
  team(slug: String): Team
  teams: [Team]
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String!
  endsWith: String!
  equals: String!
  gt: String!
  gte: String!
  in: [String!]!
  lt: String!
  lte: String!
  notIn: [String!]!
  startsWith: String!
}

"""
NBA team
"""
type Team {
  abbreviation: String!
  city: String!
  coaches(
    cursor: CoachWhereUniqueInput
    orderBy: CoachOrderByInput
    skip: Int
    take: Int
    where: CoachWhereInput
  ): [Coach!]!
  colorScheme: ColorScheme
  conference: String!
  createdAt: DateTime!
  division: String!
  established: String!
  handle: String!
  id: ID!
  logo: String!
  logoSlug: String!
  losses: Int
  name: String!
  players(
    cursor: PlayerWhereUniqueInput
    orderBy: PlayerOrderByInput
    skip: Int
    take: Int
    where: PlayerWhereInput
  ): [Player!]!
  slug: String!
  updatedAt: DateTime!
  winPercentage: Float
  wins: Int
}

input TeamOrderByInput {
  slug: SortOrder!
}

input TeamWhereInput {
  id: String!
  slug: StringFilter!
}

input TeamWhereUniqueInput {
  id: String!
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload
